$scan-width: 1.5px;
$scan-crt: true;
$scan-fps: 60;
$scan-color: rgba(#000, .3);
$scan-z-index: 8;

$scan-moving-line: true;
$scan-opacity: .9;

@mixin scan-crt($scan-crt) {
    @if $scan-crt == true {
        animation: scanlines 1s steps($scan-fps) infinite;
    }
    @else { animation: none; }
}

@mixin scan-moving($scan-moving-line) {
    @if $scan-moving-line == true {
        animation: scanline 6s linear infinite;
    }
    @else { animation: none; }
}

.scanlines {
    position: relative;
    overflow: hidden; // only to animate the unique scanline

    &:before,
    &:after {
        display: block;
        pointer-events: none;
        content: '';
        position: absolute;
    }

    // unique scanline travelling on the screen
    &:before {
        // position: absolute;
        // bottom: 100%;
        width: 100%;
        height: $scan-width * 1;
        z-index: $scan-z-index + 1;
        background: $scan-color;
        opacity: $scan-opacity;
        // animation: scanline 6s linear infinite;
        @include scan-moving(rgba($col-white, .4));
    }

    // the scanlines, so!
    &:after {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: $scan-z-index;
        background: linear-gradient(
            to bottom,
            transparent 50%,
            $scan-color 51%
        );
        background-size: 100% $scan-width*2;
        @include scan-crt($scan-crt);
    }
}

@keyframes scanline {
    0% {
        transform: translate3d(0,200000%,0);
        // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}

@keyframes scanlines {
    0% {
        background-position: 0 50%;
        // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
}